const renderComprehensiveReportPDF = (doc, {
  title,
  generatedBy,
  generatedDate,
  organizationName,
  period,
  enrollment = {},
  completion = {},
  feedback = {},
  recommendations = ''
}) => {
  // Header
  doc.rect(0, 0, doc.page.width, 60).fill('#2d3748');
  doc.fillColor('#fff').font('Helvetica-Bold').fontSize(22).text('Organisation Training Management System', 40, 20, { align: 'left' });
  doc.fillColor('#2d3748');
  doc.moveDown(2);

  // Title and meta
  doc.font('Helvetica-Bold').fontSize(18).text(title || 'Comprehensive Training Report', { align: 'center' });
  doc.moveDown(0.5);
  doc.font('Helvetica').fontSize(12).text(`Generated on: ${generatedDate ? new Date(generatedDate).toLocaleDateString() : ''}`);
  doc.font('Helvetica').fontSize(12).text(`Generated by: ${generatedBy || 'OTMS Admin Panel'}`);
  doc.moveDown(0.5);

  // Organization and period
  if (organizationName) doc.font('Helvetica-Bold').fontSize(13).text(`🏢 Organization: ${organizationName}`);
  if (period && period.startDate && period.endDate) doc.font('Helvetica').fontSize(12).text(`📅 Reporting Period: ${period.startDate} – ${period.endDate}`);
  doc.moveDown(1);

  // Enrollment Section
  doc.font('Helvetica-Bold').fontSize(15).text('1. Enrollment Summary');
  doc.moveDown(0.3);
  doc.font('Helvetica').fontSize(12).text(`Total Enrollments: ${enrollment.summary?.totalEnrollments ?? 0}`);
  if (Array.isArray(enrollment.summary?.statusBreakdown)) {
    doc.font('Helvetica-Bold').fontSize(13).text('Status Breakdown:');
    enrollment.summary.statusBreakdown.forEach(status => {
      doc.font('Helvetica').fontSize(12).text(`- ${status._id}: ${status.count}`);
    });
  }
  doc.moveDown(1);

  // Enrollment Details Table
  if (Array.isArray(enrollment.details) && enrollment.details.length > 0) {
    doc.font('Helvetica-Bold').fontSize(13).text('Enrollment Details:');
    doc.font('Helvetica-Bold').fontSize(12)
      .text('Name', 40, doc.y, { width: 120 })
      .text('Course', 170, doc.y, { width: 120 })
      .text('Status', 300, doc.y, { width: 80 })
      .text('Enrolled On', 390, doc.y, { width: 100 });
    doc.moveDown(0.2);
    enrollment.details.forEach(enrollment => {
      const name = enrollment.user ? `${enrollment.user.firstName} ${enrollment.user.lastName}` : '';
      const course = enrollment.course ? enrollment.course.title : '';
      const status = enrollment.status || '';
      const enrolledOn = enrollment.enrollmentDate ? new Date(enrollment.enrollmentDate).toLocaleDateString() : '';
      doc.font('Helvetica').fontSize(11)
        .text(name, 40, doc.y, { width: 120 })
        .text(course, 170, doc.y, { width: 120 })
        .text(status, 300, doc.y, { width: 80 })
        .text(enrolledOn, 390, doc.y, { width: 100 });
      doc.moveDown(0.1);
    });
    doc.moveDown(1);
  }

  // Completion Section
  doc.font('Helvetica-Bold').fontSize(15).text('2. Completion Summary');
  doc.moveDown(0.3);
  doc.font('Helvetica').fontSize(12).text(`Total Courses: ${completion.summary?.totalCourses ?? 0}`);
  doc.font('Helvetica').fontSize(12).text(`Average Completion Rate: ${completion.summary?.averageCompletionRate ? completion.summary.averageCompletionRate.toFixed(2) + '%' : 'N/A'}`);
  doc.moveDown(1);

  // Completion Course Stats Table
  if (Array.isArray(completion.courseStats) && completion.courseStats.length > 0) {
    doc.font('Helvetica-Bold').fontSize(13).text('Course Stats:');
    doc.font('Helvetica-Bold').fontSize(12)
      .text('Course', 40, doc.y, { width: 120 })
      .text('Total', 170, doc.y, { width: 60 })
      .text('Completed', 240, doc.y, { width: 80 })
      .text('Dropped', 330, doc.y, { width: 80 })
      .text('Completion Rate', 420, doc.y, { width: 100 });
    doc.moveDown(0.2);
    completion.courseStats.forEach(stat => {
      doc.font('Helvetica').fontSize(11)
        .text(stat.course?.title || '', 40, doc.y, { width: 120 })
        .text(stat.total, 170, doc.y, { width: 60 })
        .text(stat.completed, 240, doc.y, { width: 80 })
        .text(stat.dropped, 330, doc.y, { width: 80 })
        .text((stat.completionRate ? stat.completionRate.toFixed(2) + '%' : 'N/A'), 420, doc.y, { width: 100 });
      doc.moveDown(0.1);
    });
    doc.moveDown(1);
  }

  // Feedback Section
  doc.font('Helvetica-Bold').fontSize(15).text('3. Feedback Summary');
  doc.moveDown(0.3);
  doc.font('Helvetica').fontSize(12).text(`Total Feedback: ${feedback.summary?.totalFeedback ?? 0}`);
  doc.font('Helvetica').fontSize(12).text(`Average Overall Rating: ${feedback.summary?.avgOverallRating ? feedback.summary.avgOverallRating.toFixed(2) : 'N/A'}`);
  doc.font('Helvetica').fontSize(12).text(`Average Content Rating: ${feedback.summary?.avgContentRating ? feedback.summary.avgContentRating.toFixed(2) : 'N/A'}`);
  doc.font('Helvetica').fontSize(12).text(`Average Instructor Rating: ${feedback.summary?.avgInstructorRating ? feedback.summary.avgInstructorRating.toFixed(2) : 'N/A'}`);
  doc.moveDown(1);

  // Feedback Rating Distribution Table
  if (Array.isArray(feedback.ratingDistribution) && feedback.ratingDistribution.length > 0) {
    doc.font('Helvetica-Bold').fontSize(13).text('Rating Distribution:');
    doc.font('Helvetica-Bold').fontSize(12)
      .text('Rating', 40, doc.y, { width: 100 })
      .text('Count', 150, doc.y, { width: 100 });
    doc.moveDown(0.2);
    feedback.ratingDistribution.forEach(row => {
      doc.font('Helvetica').fontSize(11)
        .text(row._id, 40, doc.y, { width: 100 })
        .text(row.count, 150, doc.y, { width: 100 });
      doc.moveDown(0.1);
    });
    doc.moveDown(1);
  }

  // Feedback Comments
  if (Array.isArray(feedback.feedbackComments) && feedback.feedbackComments.length > 0) {
    doc.font('Helvetica-Bold').fontSize(13).text('Feedback Comments:');
    feedback.feedbackComments.forEach(comment => {
      doc.font('Helvetica-Oblique').fontSize(12).text(`"${comment}"`);
      doc.moveDown(0.2);
    });
    doc.moveDown(1);
  }

  // Recommendations
  doc.font('Helvetica-Bold').fontSize(15).text('4. Recommendations');
  doc.moveDown(0.3);
  if (Array.isArray(recommendations)) {
    recommendations.forEach(rec => doc.font('Helvetica').fontSize(12).text(`- ${rec}`));
  } else {
    doc.font('Helvetica').fontSize(12).text(recommendations || 'No recommendations.');
  }
  doc.moveDown(2);

  // Footer
  doc.font('Helvetica').fontSize(10).fillColor('#718096')
    .text('Report generated by OTMS – Streamlining inclusive training experiences. For internal use only.', 0, doc.page.height - 40, { align: 'center' });
};

module.exports = { renderComprehensiveReportPDF }; 