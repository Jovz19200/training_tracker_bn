const renderEnrollmentReportPDF = (doc, {
  title,
  generatedBy,
  generatedDate,
  organizationName,
  period,
  summary = {},
  details = []
}) => {
  // Header
  doc.rect(0, 0, doc.page.width, 60).fill('#2d3748');
  doc.fillColor('#fff').font('Helvetica-Bold').fontSize(22).text('Organisation Training Management System', 40, 20, { align: 'left' });
  doc.fillColor('#2d3748');
  doc.moveDown(2);

  // Title and meta
  doc.font('Helvetica-Bold').fontSize(18).text(title || 'Enrollment Report', { align: 'center' });
  doc.moveDown(0.5);
  doc.font('Helvetica').fontSize(12).text(`Generated on: ${generatedDate ? new Date(generatedDate).toLocaleDateString() : ''}`);
  doc.font('Helvetica').fontSize(12).text(`Generated by: ${generatedBy || 'OTMS Admin Panel'}`);
  doc.moveDown(0.5);

  // Organization and period
  if (organizationName) doc.font('Helvetica-Bold').fontSize(13).text(`🏢 Organization: ${organizationName}`);
  if (period && period.startDate && period.endDate) doc.font('Helvetica').fontSize(12).text(`📅 Reporting Period: ${period.startDate} – ${period.endDate}`);
  doc.moveDown(1);

  // Summary
  doc.font('Helvetica-Bold').fontSize(14).text('Summary');
  doc.moveDown(0.3);
  doc.font('Helvetica').fontSize(12).text(`Total Enrollments: ${summary.totalEnrollments ?? 0}`);
  if (Array.isArray(summary.statusBreakdown)) {
    doc.font('Helvetica-Bold').fontSize(13).text('Status Breakdown:');
    summary.statusBreakdown.forEach(status => {
      doc.font('Helvetica').fontSize(12).text(`- ${status._id}: ${status.count}`);
    });
  }
  doc.moveDown(1);

  // Enrollment Details Table
  doc.font('Helvetica-Bold').fontSize(14).text('Enrollment Details');
  doc.moveDown(0.3);
  // Table header
  doc.font('Helvetica-Bold').fontSize(12)
    .text('Name', 40, doc.y, { width: 120 })
    .text('Course', 170, doc.y, { width: 120 })
    .text('Status', 300, doc.y, { width: 80 })
    .text('Enrolled On', 390, doc.y, { width: 100 });
  doc.moveDown(0.2);
  // Table rows
  details.forEach(enrollment => {
    const name = enrollment.user ? `${enrollment.user.firstName} ${enrollment.user.lastName}` : '';
    const course = enrollment.course ? enrollment.course.title : '';
    const status = enrollment.status || '';
    const enrolledOn = enrollment.enrollmentDate ? new Date(enrollment.enrollmentDate).toLocaleDateString() : '';
    doc.font('Helvetica').fontSize(11)
      .text(name, 40, doc.y, { width: 120 })
      .text(course, 170, doc.y, { width: 120 })
      .text(status, 300, doc.y, { width: 80 })
      .text(enrolledOn, 390, doc.y, { width: 100 });
    doc.moveDown(0.1);
  });
  doc.moveDown(2);

  // Footer
  doc.font('Helvetica').fontSize(10).fillColor('#718096')
    .text('Report generated by OTMS – Streamlining inclusive training experiences. For internal use only.', 0, doc.page.height - 40, { align: 'center' });
};

module.exports = { renderEnrollmentReportPDF }; 