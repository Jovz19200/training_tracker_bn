const renderCompletionReportPDF = (doc, {
  title,
  generatedBy,
  generatedDate,
  organizationName,
  period,
  summary = [],
  topPerformers = [],
  pendingParticipants = [],
  feedback = '',
  recommendations = ''
}) => {
  // Header
  doc.rect(0, 0, doc.page.width, 60).fill('#2d3748');
  doc.fillColor('#fff').font('Helvetica-Bold').fontSize(22).text('Organisation Training Management System', 40, 20, { align: 'left' });
  doc.fillColor('#2d3748');
  doc.moveDown(2);

  // Title and meta
  doc.font('Helvetica-Bold').fontSize(18).text(title || 'Training Completion Report', { align: 'center' });
  doc.moveDown(0.5);
  doc.font('Helvetica').fontSize(12).text(`Generated on: ${generatedDate ? new Date(generatedDate).toLocaleDateString() : ''}`);
  doc.font('Helvetica').fontSize(12).text(`Generated by: ${generatedBy || 'OTMS Admin Panel'}`);
  doc.moveDown(0.5);

  // Organization and period
  if (organizationName) doc.font('Helvetica-Bold').fontSize(13).text(`🏢 Organization: ${organizationName}`);
  if (period && period.startDate && period.endDate) doc.font('Helvetica').fontSize(12).text(`📅 Reporting Period: ${period.startDate} – ${period.endDate}`);
  doc.moveDown(1);

  // 1. Training Summary Table
  doc.font('Helvetica-Bold').fontSize(14).text('1. 📊 Training Summary');
  doc.moveDown(0.3);
  // Table header
  doc.font('Helvetica-Bold').fontSize(12)
    .text('Category', 40, doc.y, { width: 120 })
    .text('Total Conducted', 170, doc.y, { width: 100 })
    .text('Participants', 280, doc.y, { width: 100 })
    .text('Completion Rate', 390, doc.y, { width: 100 });
  doc.moveDown(0.2);
  // Table rows
  summary.forEach(row => {
    doc.font('Helvetica').fontSize(11)
      .text(row.category, 40, doc.y, { width: 120 })
      .text(row.totalConducted, 170, doc.y, { width: 100 })
      .text(row.participants, 280, doc.y, { width: 100 })
      .text(row.completionRate, 390, doc.y, { width: 100 });
    doc.moveDown(0.1);
  });
  doc.moveDown(1);

  // 2. Top Performing Participants
  doc.font('Helvetica-Bold').fontSize(14).text('2. ✅ Top Performing Participants');
  doc.moveDown(0.3);
  doc.font('Helvetica-Bold').fontSize(12)
    .text('Name', 40, doc.y, { width: 120 })
    .text('Department', 170, doc.y, { width: 100 })
    .text('Trainings Completed', 280, doc.y, { width: 100 })
    .text('Score (%)', 390, doc.y, { width: 100 });
  doc.moveDown(0.2);
  topPerformers.forEach(row => {
    doc.font('Helvetica').fontSize(11)
      .text(row.name, 40, doc.y, { width: 120 })
      .text(row.department, 170, doc.y, { width: 100 })
      .text(row.trainingsCompleted, 280, doc.y, { width: 100 })
      .text(row.score, 390, doc.y, { width: 100 });
    doc.moveDown(0.1);
  });
  doc.moveDown(1);

  // 3. Pending Participants
  doc.font('Helvetica-Bold').fontSize(14).text('3. ❌ Pending Participants');
  doc.moveDown(0.3);
  doc.font('Helvetica-Bold').fontSize(12)
    .text('Name', 40, doc.y, { width: 120 })
    .text('Missed Training(s)', 170, doc.y, { width: 180 })
    .text('Follow-up Needed', 360, doc.y, { width: 100 });
  doc.moveDown(0.2);
  pendingParticipants.forEach(row => {
    doc.font('Helvetica').fontSize(11)
      .text(row.name, 40, doc.y, { width: 120 })
      .text(row.missedTrainings, 170, doc.y, { width: 180 })
      .text(row.followUpNeeded, 360, doc.y, { width: 100 });
    doc.moveDown(0.1);
  });
  doc.moveDown(1);

  // 4. Trainer Feedback Summary
  doc.font('Helvetica-Bold').fontSize(14).text('4. 📝 Trainer Feedback Summary');
  doc.moveDown(0.3);
  doc.font('Helvetica-Oblique').fontSize(12).text(feedback || 'No feedback provided.');
  doc.moveDown(1);

  // 5. Recommendations
  doc.font('Helvetica-Bold').fontSize(14).text('5. 📌 Recommendations');
  doc.moveDown(0.3);
  if (Array.isArray(recommendations)) {
    recommendations.forEach(rec => doc.font('Helvetica').fontSize(12).text(`- ${rec}`));
  } else {
    doc.font('Helvetica').fontSize(12).text(recommendations || 'No recommendations.');
  }
  doc.moveDown(2);

  // Footer
  doc.font('Helvetica').fontSize(10).fillColor('#718096')
    .text('Report generated by OTMS – Streamlining inclusive training experiences. For internal use only.', 0, doc.page.height - 40, { align: 'center' });
};

module.exports = { renderCompletionReportPDF }; 